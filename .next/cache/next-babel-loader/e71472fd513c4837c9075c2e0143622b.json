{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Prudence\\\\Desktop\\\\Foundation\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Button from 'react-bootstrap/Button';\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.title)));\n};\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Hello Next.js\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"My blog\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(PostLink, {\n    id: \"hello-nextjs\",\n    title: \"Hello nextjs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(PostLink, {\n    id: \"learn-nextjs\",\n    title: \"Learn nextjs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(PostLink, {\n    id: \"deploy-nextjs\",\n    title: \"Deploy nextjs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Fetching data from external API\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.msgs.map(function (mg) {\n    return __jsx(\"li\", {\n      key: mg.UniqueMessageId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(mg.UniqueMessageId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, mg.Post)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var account_token, user_token, groupid, profileid, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\n          user_token = 'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\n          groupid = '1560761320';\n          profileid = '';\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Facebook?account_token=' + account_token + '&groupid=' + groupid + '&user_token=' + user_token + '&profileid=1578394727&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=2&sortby=date&sort=desc'));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            msgs: data.docs\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Prudence/Desktop/Foundation/pages/index.js"],"names":["Layout","Link","fetch","Button","PostLink","props","id","title","Index","msgs","map","mg","UniqueMessageId","Post","getInitialProps","account_token","user_token","groupid","profileid","res","json","data","docs"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAUA,KAAK,CAACC,EAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,KAAV,CADJ,CADJ,CADkB;AAAA,CAAtB;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAH,KAAK;AAAA,SACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,EAAE,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,QAAD;AAAU,IAAA,EAAE,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,QAAD;AAAU,IAAA,EAAE,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAHJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCARJ,EASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,UAAAC,EAAE;AAAA,WACd;AAAI,MAAA,GAAG,EAAGA,EAAE,CAACC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,EAAE,CAACC,eAAX,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,EAAE,CAACE,IAAP,CADJ,CADJ,CADc;AAAA,GAAjB,CADL,CATR,CADW;AAAA,CAAnB;;AAuBAL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,aADc,GACE,kCADF;AAEdC,UAAAA,UAFc,GAEA,kCAFA;AAGdC,UAAAA,OAHc,GAGJ,YAHI;AAIdC,UAAAA,SAJc,GAIF,EAJE;AAAA;AAAA,2CAKFhB,KAAK,CAAC,+EAA8Ea,aAA9E,GAA8F,WAA9F,GAA2GE,OAA3G,GAAoH,cAApH,GAAqID,UAArI,GAAkJ,6HAAnJ,CALH;;AAAA;AAKdG,UAAAA,GALc;AAAA;AAAA,2CAMDA,GAAG,CAACC,IAAJ,EANC;;AAAA;AAMdC,UAAAA,IANc;AAAA,2CASb;AACHZ,YAAAA,IAAI,EAAEY,IAAI,CAACC;AADR,WATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAed,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst PostLink = props => (\r\n    <li>\r\n        <Link href=\"/p/[id]\" as = {`/p/${props.id}`}>\r\n            <a>{props.title}</a>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nconst Index = props => (\r\n        <Layout>\r\n            <p>Hello Next.js</p>\r\n            <h1>My blog</h1>\r\n            <ul>\r\n                <PostLink id=\"hello-nextjs\" title=\"Hello nextjs\" />\r\n                <PostLink id=\"learn-nextjs\" title=\"Learn nextjs\" />\r\n                <PostLink id=\"deploy-nextjs\" title=\"Deploy nextjs\" />\r\n            </ul>            \r\n            <h2>Fetching data from external API</h2>\r\n                <ul>\r\n                    {props.msgs.map(mg => (\r\n                        <li key= {mg.UniqueMessageId}>\r\n                            <Link href=\"/p/[id]\" as={`/p/${mg.UniqueMessageId}`}>\r\n                                <a>{mg.Post}</a>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                    \r\n                </ul>\r\n        </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n    const account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\r\n    const user_token =  'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\r\n    const groupid = '1560761320';\r\n    const profileid = '';\r\n    const res = await fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Facebook?account_token='+ account_token + '&groupid='+ groupid+ '&user_token=' + user_token + '&profileid=1578394727&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=2&sortby=date&sort=desc');\r\n    const data = await res.json();\r\n    //console.log(data.docs);\r\n    //console.log(`msgs data fetched. Count : ${data.docs.length}`);\r\n    return {\r\n        msgs: data.docs\r\n    };\r\n};\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}