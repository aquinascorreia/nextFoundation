{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport css from '../css/styles.scss';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Button from 'react-bootstrap/Button';\n\nconst PostLink = props => __jsx(\"li\", null, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${props.id}`\n}, __jsx(\"a\", null, props.title)));\n\nconst Index = props => __jsx(Layout, null, __jsx(\"p\", {\n  className: css.example\n}, \"Hello Next.js\"), __jsx(\"h1\", null, \"My blog\"), __jsx(\"ul\", null, __jsx(PostLink, {\n  id: \"hello-nextjs\",\n  title: \"Hello nextjs\"\n}), __jsx(PostLink, {\n  id: \"learn-nextjs\",\n  title: \"Learn nextjs\"\n}), __jsx(PostLink, {\n  id: \"deploy-nextjs\",\n  title: \"Deploy nextjs\"\n})), __jsx(ButtonToolbar, null, __jsx(Button, {\n  variant: \"danger\"\n}, \"Danger\")), __jsx(\"h2\", null, \"Fetching data from external API\"), __jsx(\"ul\", null, props.msgs.map(mg => __jsx(\"li\", {\n  key: mg.UniqueMessageId\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${mg.UniqueMessageId}`\n}, __jsx(\"a\", null, mg.UniqueMessageId))))), __jsx(\"h1\", null, \"By using custom server route listening\"), __jsx(\"ul\", null, props.msgs.map(mg => __jsx(\"li\", {\n  key: mg.UniqueMessageId\n}, __jsx(Link, {\n  as: `/post?UniqueMessageId=${mg.UniqueMessageId}`,\n  href: `/post?UniqueMessageId=${mg.UniqueMessageId}`\n}, __jsx(\"a\", {\n  style: {\n    'fontSize': '20px'\n  }\n}, mg.UniqueMessageId))))));\n\nIndex.getInitialProps = async function () {\n  const account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\n  const user_token = 'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\n  const groupid = '1560761320';\n  const profileid = '362460000';\n  let res = '';\n  let insta = '';\n  res = await fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Twitter?account_token=' + account_token + '&groupid=' + groupid + '&user_token=' + user_token + '&profileid=' + profileid + '&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=5&sortby=date&sort=desc');\n  insta = await fetch('https://graph.facebook.com/17841593698074073/recent_media?user_id=17841429712936619&access_token=EAAoush5u3f4BAF9beMg4ThyobDvHJTotZAhQDXGwOxTpF5p9zAMT0oCNlHDizAbZBTZCNmOofwbtopBRCppSohdClaumKA7OoSVt1ZAZB62CNHAJRTZAWx38yrRHRtPde1YjGT6N0qeWahTL3LNeFZCO8kZC2N7XashahNFeOQrPIJjWTVtpffArzwwK5FpVQKcZD&fields=id,caption,comments_count,like_count,media_type,media_url,permalink,children{media_url,id}');\n  const data = await res.json();\n  const posts = await insta.json(); //console.log(data.docs);\n  //console.log(`msgs data fetched. Count : ${data.docs.length}`);\n\n  return {\n    msgs: data.docs,\n    posts: posts.data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Prudence/Desktop/Foundation/pages/index.js"],"names":["Layout","Link","fetch","css","ButtonToolbar","Button","PostLink","props","id","title","Index","example","msgs","map","mg","UniqueMessageId","getInitialProps","account_token","user_token","groupid","profileid","res","insta","data","json","posts","docs"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB,kBACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAK,MAAKA,KAAK,CAACC,EAAG;AAA1C,GACI,iBAAID,KAAK,CAACE,KAAV,CADJ,CADJ,CADJ;;AAQA,MAAMC,KAAK,GAAGH,KAAK,IACX,MAAC,MAAD,QACI;AAAG,EAAA,SAAS,EAAEJ,GAAG,CAACQ;AAAlB,mBADJ,EAEI,4BAFJ,EAGI,kBACI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,cAAb;AAA4B,EAAA,KAAK,EAAC;AAAlC,EADJ,EAEI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,cAAb;AAA4B,EAAA,KAAK,EAAC;AAAlC,EAFJ,EAGI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,eAAb;AAA6B,EAAA,KAAK,EAAC;AAAnC,EAHJ,CAHJ,EAQI,MAAC,aAAD,QACI,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAC;AAAhB,YADJ,CARJ,EAWI,oDAXJ,EAYQ,kBACKJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAeC,EAAE,IACd;AAAI,EAAA,GAAG,EAAGA,EAAE,CAACC;AAAb,GAEI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,EAAE,CAACC,eAAgB;AAAlD,GACI,iBAAID,EAAE,CAACC,eAAP,CADJ,CAFJ,CADH,CADL,CAZR,EAwBI,2DAxBJ,EAyBQ,kBACKR,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAeC,EAAE,IACd;AAAI,EAAA,GAAG,EAAGA,EAAE,CAACC;AAAb,GAEI,MAAC,IAAD;AAAM,EAAA,EAAE,EAAG,yBAAwBD,EAAE,CAACC,eAAgB,EAAtD;AAAyD,EAAA,IAAI,EAAG,yBAAwBD,EAAE,CAACC,eAAgB;AAA3G,GACI;AAAG,EAAA,KAAK,EAAE;AAAC,gBAAW;AAAZ;AAAV,GAAgCD,EAAE,CAACC,eAAnC,CADJ,CAFJ,CADH,CADL,CAzBR,CADR;;AAwCAL,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,aAAa,GAAG,kCAAtB;AACA,QAAMC,UAAU,GAAI,kCAApB;AACA,QAAMC,OAAO,GAAG,YAAhB;AACA,QAAMC,SAAS,GAAG,WAAlB;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAD,EAAAA,GAAG,GAAG,MAAMnB,KAAK,CAAC,8EAA6Ee,aAA7E,GAA6F,WAA7F,GAA0GE,OAA1G,GAAmH,cAAnH,GAAoID,UAApI,GAAiJ,aAAjJ,GAAgKE,SAAhK,GAA0K,wGAA3K,CAAjB;AACAE,EAAAA,KAAK,GAAG,MAAMpB,KAAK,CAAC,2YAAD,CAAnB;AAEA,QAAMqB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,QAAMC,KAAK,GAAG,MAAMH,KAAK,CAACE,IAAN,EAApB,CAZqC,CAarC;AACA;;AACA,SAAO;AACHZ,IAAAA,IAAI,EAAEW,IAAI,CAACG,IADR;AAEHD,IAAAA,KAAK,EAAEA,KAAK,CAACF;AAFV,GAAP;AAIH,CAnBD;;AAqBA,eAAeb,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport css from '../css/styles.scss'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst PostLink = props => (\r\n    <li>\r\n        <Link href=\"/p/[id]\" as = {`/p/${props.id}`}>\r\n            <a>{props.title}</a>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nconst Index = props => (\r\n        <Layout>\r\n            <p className={css.example}>Hello Next.js</p>\r\n            <h1>My blog</h1>\r\n            <ul>\r\n                <PostLink id=\"hello-nextjs\" title=\"Hello nextjs\" />\r\n                <PostLink id=\"learn-nextjs\" title=\"Learn nextjs\" />\r\n                <PostLink id=\"deploy-nextjs\" title=\"Deploy nextjs\" />\r\n            </ul>   \r\n            <ButtonToolbar>\r\n                <Button variant=\"danger\">Danger</Button>\r\n            </ButtonToolbar>\r\n            <h2>Fetching data from external API</h2>\r\n                <ul>\r\n                    {props.msgs.map(mg => (\r\n                        <li key= {mg.UniqueMessageId}>\r\n\r\n                            <Link href=\"/p/[id]\" as={`/p/${mg.UniqueMessageId}`}>\r\n                                <a>{mg.UniqueMessageId}</a>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                    \r\n                </ul>\r\n\r\n            <h1>By using custom server route listening</h1>\r\n                <ul>\r\n                    {props.msgs.map(mg => (\r\n                        <li key= {mg.UniqueMessageId}>\r\n\r\n                            <Link as={`/post?UniqueMessageId=${mg.UniqueMessageId}`} href={`/post?UniqueMessageId=${mg.UniqueMessageId}`} >\r\n                                <a style={{'fontSize':'20px'}}>{mg.UniqueMessageId}</a>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                    \r\n                </ul>\r\n        </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n    const account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\r\n    const user_token =  'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\r\n    const groupid = '1560761320';\r\n    const profileid = '362460000';\r\n    let res = '';\r\n    let insta = '';\r\n    \r\n    res = await fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Twitter?account_token='+ account_token + '&groupid='+ groupid+ '&user_token=' + user_token + '&profileid='+ profileid+'&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=5&sortby=date&sort=desc');\r\n    insta = await fetch('https://graph.facebook.com/17841593698074073/recent_media?user_id=17841429712936619&access_token=EAAoush5u3f4BAF9beMg4ThyobDvHJTotZAhQDXGwOxTpF5p9zAMT0oCNlHDizAbZBTZCNmOofwbtopBRCppSohdClaumKA7OoSVt1ZAZB62CNHAJRTZAWx38yrRHRtPde1YjGT6N0qeWahTL3LNeFZCO8kZC2N7XashahNFeOQrPIJjWTVtpffArzwwK5FpVQKcZD&fields=id,caption,comments_count,like_count,media_type,media_url,permalink,children{media_url,id}');\r\n    \r\n    const data = await res.json();\r\n    const posts = await insta.json();\r\n    //console.log(data.docs);\r\n    //console.log(`msgs data fetched. Count : ${data.docs.length}`);\r\n    return {\r\n        msgs: data.docs,\r\n        posts: posts.data\r\n    };\r\n};\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}