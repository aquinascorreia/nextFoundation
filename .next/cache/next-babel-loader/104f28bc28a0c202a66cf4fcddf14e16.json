{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prudence\\\\Desktop\\\\Foundation\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport css from '../css/styles.scss';\n\nconst PostLink = props => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.title)));\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(\"p\", {\n  className: \"example\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Hello Next.js\"), __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"My blog\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(PostLink, {\n  id: \"hello-nextjs\",\n  title: \"Hello nextjs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), __jsx(PostLink, {\n  id: \"learn-nextjs\",\n  title: \"Learn nextjs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), __jsx(PostLink, {\n  id: \"deploy-nextjs\",\n  title: \"Deploy nextjs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Fetching data from external API\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, props.msgs.map(mg => __jsx(\"li\", {\n  key: mg.UniqueMessageId,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${mg.UniqueMessageId}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, mg.UniqueMessageId))))));\n\nIndex.getInitialProps = async function () {\n  const account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\n  const user_token = 'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\n  const groupid = '1560761320';\n  const profileid = '362460000';\n  let res = '';\n  res = await fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Twitter?account_token=' + account_token + '&groupid=' + groupid + '&user_token=' + user_token + '&profileid=' + profileid + '&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=2&sortby=date&sort=desc');\n  const data = await res.json(); //console.log(data.docs);\n  //console.log(`msgs data fetched. Count : ${data.docs.length}`);\n\n  return {\n    msgs: data.docs\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Prudence/Desktop/Foundation/pages/index.js"],"names":["Layout","Link","fetch","css","PostLink","props","id","title","Index","msgs","map","mg","UniqueMessageId","getInitialProps","account_token","user_token","groupid","profileid","res","data","json","docs"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAK,MAAKA,KAAK,CAACC,EAAG,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,KAAK,CAACE,KAAV,CADJ,CADJ,CADJ;;AAQA,MAAMC,KAAK,GAAGH,KAAK,IACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,cAAb;AAA4B,EAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,cAAb;AAA4B,EAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,MAAC,QAAD;AAAU,EAAA,EAAE,EAAC,eAAb;AAA6B,EAAA,KAAK,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CAHJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARJ,EASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAeC,EAAE,IACd;AAAI,EAAA,GAAG,EAAGA,EAAE,CAACC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,EAAE,CAACC,eAAgB,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,EAAE,CAACC,eAAP,CADJ,CAFJ,CADH,CADL,CATR,CADR;;AAwBAJ,KAAK,CAACK,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,aAAa,GAAG,kCAAtB;AACA,QAAMC,UAAU,GAAI,kCAApB;AACA,QAAMC,OAAO,GAAG,YAAhB;AACA,QAAMC,SAAS,GAAG,WAAlB;AACA,MAAIC,GAAG,GAAG,EAAV;AAEAA,EAAAA,GAAG,GAAG,MAAMhB,KAAK,CAAC,8EAA6EY,aAA7E,GAA6F,WAA7F,GAA0GE,OAA1G,GAAmH,cAAnH,GAAoID,UAApI,GAAiJ,aAAjJ,GAAgKE,SAAhK,GAA0K,wGAA3K,CAAjB;AAEA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CATqC,CAUrC;AACA;;AACA,SAAO;AACHX,IAAAA,IAAI,EAAEU,IAAI,CAACE;AADR,GAAP;AAGH,CAfD;;AAiBA,eAAeb,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport css from '../css/styles.scss'\r\n\r\nconst PostLink = props => (\r\n    <li>\r\n        <Link href=\"/p/[id]\" as = {`/p/${props.id}`}>\r\n            <a>{props.title}</a>\r\n        </Link>\r\n    </li>\r\n);\r\n\r\nconst Index = props => (\r\n        <Layout>\r\n            <p className=\"example\">Hello Next.js</p>\r\n            <h1>My blog</h1>\r\n            <ul>\r\n                <PostLink id=\"hello-nextjs\" title=\"Hello nextjs\" />\r\n                <PostLink id=\"learn-nextjs\" title=\"Learn nextjs\" />\r\n                <PostLink id=\"deploy-nextjs\" title=\"Deploy nextjs\" />\r\n            </ul>            \r\n            <h2>Fetching data from external API</h2>\r\n                <ul>\r\n                    {props.msgs.map(mg => (\r\n                        <li key= {mg.UniqueMessageId}>\r\n\r\n                            <Link href=\"/p/[id]\" as={`/p/${mg.UniqueMessageId}`}>\r\n                                <a>{mg.UniqueMessageId}</a>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                    \r\n                </ul>\r\n        </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n    const account_token = 'PT8YzkMO74fPqt8GoAD0+5EpkAdH6WTJ';\r\n    const user_token =  'gzSRj2TyEhnPqt8GoAD0+wymZArbWes0';\r\n    const groupid = '1560761320';\r\n    const profileid = '362460000';\r\n    let res = '';\r\n    \r\n    res = await fetch('http://api.konnectinsights.com/v2.0/SocialMessages/Twitter?account_token='+ account_token + '&groupid='+ groupid+ '&user_token=' + user_token + '&profileid='+ profileid+'&since=2020-01-11%2000:00:00&until=2020-01-17%2023:59:59&resultType=json&limit=2&sortby=date&sort=desc');\r\n    \r\n    const data = await res.json();\r\n    //console.log(data.docs);\r\n    //console.log(`msgs data fetched. Count : ${data.docs.length}`);\r\n    return {\r\n        msgs: data.docs\r\n    };\r\n};\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}